defaults:
  # - override hydra/sweeper/sampler: tpe
  - optimizer: adam
  - scheduler: cyclic
  - loss: FocalLoss
  - dataset: tensor_lipro_all
  - model: mlp_binary
  - override hydra/sweeper: optuna
  - _self_

max_epochs: 100
optimized_metric: "val_f1"
save_dir: ${hydra:runtime.output_dir}/logs
oversample: true
dataset_boost:
  0: 1.0   # dataset 0 = normal
  1: 5.0

hydra:
  mode: "MULTIRUN" # set hydra to multirun by default if this config is attached
  sweep:
    dir: runs/output/outputs_binary_ctrate_mosmed/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${hydra.job.num}
  sweeper:
    _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper

    # storage URL to persist optimization results
    # for example, you can use SQLite if you set 'sqlite:///example.db'
    storage: null

    # name of the study to persist optimization results
    study_name: null

    # number of parallel workers
    n_jobs: 2

    # 'minimize' or 'maximize' the objective
    direction: maximize

    # total number of runs that will be executed
    n_trials: 20

    # choose Optuna hyperparameter sampler
    # you can choose bayesian sampler (tpe), random search (without optimization), grid sampler, and others
    # docs: https://optuna.readthedocs.io/en/stable/reference/samplers.html
    sampler:
      _target_: optuna.samplers.TPESampler
      seed: 42
      n_startup_trials: 1 # number of random sampling runs before optimization starts

    # define hyperparameter search space
    params:
      scheduler.body.max_lr: interval(5e-5, 5e-3)
      scheduler.body.base_lr: interval(1e-6, 1e-4)  
      model.activation: choice("relu", "leaky_relu", "gelu")
      model.dropout: choice(0.1, 0.2, 0.3)
      loss.gamma: interval(0, 3)
      model.hidden_sizes: choice([128])
      # [256, 128],  [1024, 512, 256, 128], [512, 256, 128], [1024, 1024, 512, 256], [1024, 2048, 1024, 256, 128]